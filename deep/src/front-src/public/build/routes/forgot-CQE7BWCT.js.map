{
  "version": 3,
  "sources": ["../../../app/routes/forgot.tsx", "../../../app/components/account/ForgotForm.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/forgot.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/forgot.tsx\");\n  import.meta.hot.lastModified = \"1728767387048.1558\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { useOutletContext } from \"@remix-run/react\";\nimport { getSupabaseWithSessionAndHeaders } from \"../lib/supabase-server.ts\";\nimport { json } from \"@remix-run/deno\";\nimport { ForgotForm } from \"../components/account/ForgotForm.tsx\";\nexport let loader = async ({\n  request\n}) => {\n  const {\n    headers,\n    serverSession\n  } = await getSupabaseWithSessionAndHeaders({\n    request\n  });\n  return json({\n    success: true\n  }, {\n    headers\n  });\n};\nconst Forgot = () => {\n  _s();\n  const {\n    supabase,\n    domainUrl\n  } = useOutletContext();\n  return <div className=\" min-h-screen flex items-center justify-center\">\n      <ForgotForm supabase={supabase} domain_url={domainUrl} />\n    </div>;\n};\n_s(Forgot, \"YSOlsDs4nE+ritM80b48aoYgBeg=\", false, function () {\n  return [useOutletContext];\n});\n_c = Forgot;\nexport default Forgot;\nvar _c;\n$RefreshReg$(_c, \"Forgot\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/account/ForgotForm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/account/ForgotForm.tsx\");\n  import.meta.hot.lastModified = \"1728767387048.1558\";\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nimport logo from \"../../assets/CALC.svg\";\nexport const ForgotForm = ({\n  supabase,\n  domain_url\n}) => {\n  _s();\n  const initialFormState = {\n    email: \"\"\n  };\n  const [formData, setFormData] = useState(initialFormState);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission\n\n    const url = `${window.location.origin}/reset`;\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(formData.email, {\n      redirectTo: url\n    });\n    try {\n      if (error) {\n        setErrorMessage(error.message);\n        setShowError(true);\n        setTimeout(() => {\n          setShowError(false);\n        }, 5000);\n      } else {\n        setShowMessage(true);\n        setMessage(\"Reset link sent to your email. If the proved email is registered in our database, then you should receive the link very soon.\");\n        setTimeout(() => {\n          setShowMessage(false);\n        }, 5000);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Update the corresponding property in the form data\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  return <div className=\"max-w-sm rounded-lg shadow-lg bg-white p-6 space-y-6  dark:border-gray-700  \">\n      <div className=\"space-y-2 text-center justify-center items-center \">\n        <h1 className=\"text-3xl font-bold\">Forgot Password</h1>\n\n        <p className=\"text-zinc-500 dark:text-zinc-400\">\n          Enter your email so we can send you a reset link\n        </p>\n      </div>\n      <div className=\"items-center justify-center\">\n        <img src={logo} alt=\"IBM Logo\" className=\"block mx-auto w-24 object-cover\" />\n      </div>\n      <form>\n        <div>\n          <label htmlFor=\"email\" className=\"block text-black font-medium mb-2 \">\n            Email\n          </label>\n          <input type=\"text\" id=\"email\" name=\"email\" value={formData.email || \"\"} className=\"w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100\" onChange={handleInputChange} />\n        </div>\n        <button className=\"w-full border-2 border-black hover:bg-black text-black hover:text-white p-2 rounded transition duration-300 mt-5\" onClick={handleSubmit}>\n          Reset\n        </button>\n      </form>\n      {showMessage && <div className=\"bg-green-200 p-3 mb-3 rounded-md text-green-800\">\n          {message}\n        </div>}\n      {showError && <div className=\"bg-red-200 p-3 mb-3 rounded-md text-red-800 mt-6\">\n          {errorMessage}\n        </div>}\n    </div>;\n};\n_s(ForgotForm, \"ZdbmxDK3Krm8YJs7SsTmv+JpYTQ=\");\n_c = ForgotForm;\nvar _c;\n$RefreshReg$(_c, \"ForgotForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["error", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
