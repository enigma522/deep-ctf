{
  "version": 3,
  "sources": ["../../../app/routes/template.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/template.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/template.tsx\");\n  import.meta.hot.lastModified = \"1728767387048.1558\";\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nimport { Button } from \"../components/ui/button.tsx\";\nimport goodexample1 from \"public/Images/goodexample1.png\";\nimport goodexample2 from \"public/Images/goodexample2.png\";\nimport badexample1 from \"public/Images/badexample1.png\";\nimport badexample2 from \"public/Images/badexample2.png\";\nimport badexample3 from \"public/Images/badexample3.png\";\nimport checkdistance from \"public/Images/checkdistance.png\";\nimport goodexample3 from \"public/Images/goodexample3.png\";\nimport templateZIP from \"public/Images/IBM_SL_Upload_Template_v1.zip\";\nconst Template = () => {\n  _s();\n  /**\n   * Taken and modified from: https://medium.com/charisol-community/downloading-resources-in-html5-a-download-may-not-work-as-expected-bf63546e2baa\n   * Original author: Jude Agboola\n   * Platform: medium.com\n   * Retrieved: 29-04-2024\n   */\n  const [fetching, setFetching] = useState(false);\n  const [_error, setError] = useState(false);\n  const download = (url, name) => {\n    if (!url) {\n      throw new Error(\"Resource URL not provided!\");\n    }\n    setFetching(true);\n    fetch(url).then(response => response.blob()).then(blob => {\n      setFetching(false);\n      const blobURL = URL.createObjectURL(blob);\n      const anchorElement = document.createElement(\"a\");\n      anchorElement.href = blobURL;\n      if (name && name.length) {\n        anchorElement.download = name;\n      }\n      document.body.appendChild(anchorElement);\n      anchorElement.click();\n    }).catch(() => setError(true));\n  };\n  return <div className=\"min-h-screen flex items-center justify-center flex-col\">\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <h1 className=\"text-primary text-4xl font-bold font-mono mb-6\">\n          Uploading your own data\n        </h1>\n      </div>\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <p className=\"mb-6\">\n          In order to upload a file, you need to make sure that your file\n          implements the following rules described as below. Furthermore, there\n          is a template available for you to download and use.\n        </p>\n      </div>\n\n      <div className=\"mb-6\" style={{\n      maxWidth: \"800px\"\n    }}>\n        <Button disabled={fetching} variant=\"default\" onClick={() => download(templateZIP, \"Template_version_0.zip\")}>\n          Download Template\n        </Button>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <h2 className=\"text-primary text-2xl font-bold font-mono mb-6\">\n          1. Check the file type and extension\n        </h2>\n      </div>\n      <div>\n        <p className=\"mb-6\">Our platform supports the following file types:</p>\n        <ul className=\"mb-6\">\n          <li>\n            - Excel, of file extension <b>.xls / .xlsx</b>\n          </li>\n        </ul>\n        <p className=\"mb-6\">\n          If the file extension is NOT one of the above, then our application\n          will reject the file, and ask you to try again.\n        </p>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <h2 className=\"text-primary text-2xl font-bold font-mono mb-6\">\n          2. File structure\n        </h2>\n      </div>\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <p className=\"mb-6\">\n          In order for the file to be successfully uploaded and read, it will\n          need to follow a specific structure. Currently, there are two main\n          ways of structuring the data inside your file:\n        </p>\n        <ul className=\"mb-6\">\n          <li>\n            - <b>Using address</b>\n          </li>\n          <li>\n            - <b>Distance mode</b>\n          </li>\n        </ul>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <h3 className=\"text-primary text-xl font-bold font-mono mb-6\">\n          2.1. Using addresses\n        </h3>\n      </div>\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <p className=\"mb-6\">\n          In order to use addresses, you need to atleast use four cells. These\n          four cells should have the titles: &nbsp;<b>Origin city</b>,{\" \"}\n          <b>Origin country</b>, <b>Destination city</b>, and{\" \"}\n          <b>Destination country</b>. Under each of these cells, you should\n          write the information they describe. Remember: the data has to be\n          BELOW the descriptive cells! For example, if cell <b>A1</b>\n          &nbsp;has the title{\" \"}\n          <b>Origin city</b>, then the origin city name should be in the cell\n          {\" \"}\n          <b>A2</b>.\n        </p>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <img src={goodexample1} alt=\"Example 1 of a valid excel file structure.\" />\n        <p className=\"mb-6\">\n          Example 1: a valid file structure using addresses.\n        </p>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <img src={goodexample3} alt=\"Example 2 of a valid excel file structure.\" />\n        <p className=\"mb-6\">\n          Example 2: a valid file structure using multiple addresses.\n        </p>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <img src={badexample1} alt=\"Example 3 of an invalid excel file structure.\" />\n        <p className=\"mb-6\">\n          Example 3: an invalid file structure using addresses.\n        </p>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <img src={badexample2} alt=\"Example 4 of an invalid excel file structure.\" />\n        <p className=\"mb-6\">\n          Example 4: another invalid file structure using addresses.\n        </p>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <h3 className=\"text-primary text-xl font-bold font-mono mb-6\">\n          2.2. Using distance numbers\n        </h3>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <p className=\"mb-6\">\n          In order to give the distance (which is in kilometer), you need to\n          atleast use two cells. One of the cells should have the title:\n          &nbsp;<b>Distance</b>. Under each of these cells, you should write the\n          distance length. Remember: the data has to be BELOW the descriptive\n          cell! For example, if cell <b>A1</b> has the title{\" \"}\n          <b>Distance</b>, then the distance length should be in the cell{\" \"}\n          <b>A2</b>.\n        </p>\n\n        <p className=\"mb-6\">\n          <b>REMEMBER:</b>set 'use distance' on under the upload file page!\n        </p>\n        <img src={checkdistance} alt=\"'use distance' should be activated if you want to provide distance numbers instead.\" />\n        <p className=\"mb-6\">\n          'use distance' should be activated if you want to provide distance\n          numbers instead\n        </p>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <img src={goodexample2} alt=\"Example 5 of a valid excel file structure.\" />\n        <p className=\"mb-6\">\n          Example 5: a valid file structure using distances.\n        </p>\n      </div>\n\n      <div style={{\n      maxWidth: \"800px\"\n    }}>\n        <img src={badexample3} alt=\"Example 6 of an invalid excel file structure.\" />\n        <p className=\"mb-6\">\n          Example 6: an invalid file structure using distances.\n        </p>\n      </div>\n    </div>;\n};\n_s(Template, \"PFqbS3jKb/rXXVAFewXnKB7bGcg=\");\n_c = Template;\nexport default Template;\nvar _c;\n$RefreshReg$(_c, \"Template\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
